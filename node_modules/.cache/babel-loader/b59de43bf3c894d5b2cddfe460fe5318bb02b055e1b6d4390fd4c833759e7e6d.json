{"ast":null,"code":"var _jsxFileName = \"G:\\\\internetM\\\\my-app\\\\src\\\\Authoriz\\\\page\\\\Auth.js\";\nimport React from \"react\";\nimport \"../style/auth.css\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupSchema = Yup.object().shape({\n  firstName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\"),\n  lastName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\")\n});\nfunction Auth() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authoriz\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"authoriz__form\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        validate: values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = \"Required\";\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = \"Invalid email address\";\n          }\n          return errors;\n        },\n        onSubmit: values => {\n          console.log(values);\n        },\n        children: _ref => {\n          let {\n            isSubmitting\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              className: \"authoriz__email\",\n              type: \"email\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              className: \"authoriz__email-mes\",\n              name: \"email\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"authoriz__password\",\n              type: \"password\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              className: \"authoriz__password\",\n              name: \"password\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","jsxDEV","_jsxDEV","SignupSchema","Yup","object","shape","firstName","string","min","max","required","lastName","email","Auth","className","children","initialValues","password","validate","values","errors","test","onSubmit","console","log","_ref","isSubmitting","type","name","fileName","_jsxFileName","lineNumber","columnNumber","component","disabled","_c","$RefreshReg$"],"sources":["G:/internetM/my-app/src/Authoriz/page/Auth.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../style/auth.css\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  lastName: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n});\r\n\r\nfunction Auth() {\r\n  return (\r\n    <div className=\"authoriz\">\r\n      <div className=\"authoriz__form\">\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          validate={(values) => {\r\n            const errors = {};\r\n            if (!values.email) {\r\n              errors.email = \"Required\";\r\n            } else if (\r\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n              errors.email = \"Invalid email address\";\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={(values) => {\r\n            console.log(values);\r\n          }}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form>\r\n              <Field className=\"authoriz__email\" type=\"email\" name=\"email\" />\r\n              <ErrorMessage\r\n                className=\"authoriz__email-mes\"\r\n                name=\"email\"\r\n                component=\"div\"\r\n              />\r\n              <Field\r\n                className=\"authoriz__password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n              />\r\n              <ErrorMessage\r\n                className=\"authoriz__password\"\r\n                name=\"password\"\r\n                component=\"div\"\r\n              />\r\n              <button type=\"submit\" disabled={isSubmitting}>\r\n                Submit\r\n              </button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}